[
  {
    "op": "core/column-removal",
    "description": "Remove column TIPO",
    "columnName": "TIPO"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column TIPOLOGIA",
    "columnName": "TIPOLOGIA"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column TELEFONO",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "-",
          "name": "TELEFONO",
          "type": "text",
          "columnName": "TELEFONO"
        }
      ]
    },
    "columnName": "TELEFONO",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "-"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column TELEFONO using expression grel:replace(value, \"-\", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "-",
          "name": "TELEFONO",
          "type": "text",
          "columnName": "TELEFONO"
        }
      ]
    },
    "columnName": "TELEFONO",
    "expression": "grel:replace(value, \"-\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column TELEFONO using expression grel:if ( isNonBlank(cells[\"TELEFONO\"].value), \"+39 \"+value, value )",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "TELEFONO",
    "expression": "grel:if ( isNonBlank(cells[\"TELEFONO\"].value), \"+39 \"+value, value )",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column operator at index 5 based on column DENOMINAZIONE using expression grel:split(value,\" di \")[1]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "operator",
    "columnInsertIndex": 5,
    "baseColumnName": "DENOMINAZIONE",
    "expression": "grel:split(value,\" di \")[1]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column name at index 5 based on column DENOMINAZIONE using expression grel:split(value,\" di \")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "name",
    "columnInsertIndex": 5,
    "baseColumnName": "DENOMINAZIONE",
    "expression": "grel:split(value,\" di \")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.toTitlecase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:replace(value, \" Di \", \" di \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "grel:replace(value, \" Di \", \" di \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:replace(value, \" Da \", \" da \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "grel:replace(value, \" Da \", \" da \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:replace(value, \"B & B\", \"B&B\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "grel:replace(value, \"B & B\", \"B&B\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression grel:replace(value, \"B&b\", \"B&B\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "grel:replace(value, \"B&b\", \"B&B\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column operator using expression value.toTitlecase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "operator",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CELLULARE using expression grel:replace(value, \"+39 \", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CELLULARE",
    "expression": "grel:replace(value, \"+39 \", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CELLULARE using expression grel:replace(value, \"+ 39 \", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CELLULARE",
    "expression": "grel:replace(value, \"+ 39 \", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CELLULARE using expression grel:replace(value, \"-\", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CELLULARE",
    "expression": "grel:replace(value, \"-\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CELLULARE using expression grel:if ( isNonBlank(cells[\"CELLULARE\"].value), \"+39 \"+value, value )",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CELLULARE",
    "expression": "grel:if ( isNonBlank(cells[\"CELLULARE\"].value), \"+39 \"+value, value )",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column FAX using expression grel:replace(value, \"-\", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "FAX",
    "expression": "grel:replace(value, \"-\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column FAX using expression grel:replace(value, \"+39 \", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "FAX",
    "expression": "grel:replace(value, \"+39 \", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column FAX using expression grel:if ( isNonBlank(cells[\"FAX\"].value), \"+39 \"+value, value )",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "FAX",
    "expression": "grel:if ( isNonBlank(cells[\"FAX\"].value), \"+39 \"+value, value )",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:value+\" \"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:value+\" \"",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \", \", \" , \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \", \", \" , \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".I \", \" Jan \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".I \", \" Jan \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".II \", \" Feb \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".II \", \" Feb \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".III \", \" Mar \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".III \", \" Mar \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".IV \", \" Apr \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".IV \", \" Apr \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".V \", \" May \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".V \", \" May \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".VI \", \" Jun \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".VI \", \" Jun \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".VII \", \" Jul \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".VII \", \" Jul \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".VIII \", \" Aug \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".VIII \", \" Aug \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".IX \", \" Sep \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".IX \", \" Sep \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".X \", \" Oct \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".X \", \" Oct \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".XI \", \" Nov \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".XI \", \" Nov \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression grel:replace(value, \".XII \", \" Dec \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "grel:replace(value, \".XII \", \" Dec \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-split",
    "description": "Split column PERIODO_APERTURA by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "\\s,\\s",
    "regex": true,
    "maxColumns": 0
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 1 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 1",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 2 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 2",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 3 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 3",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 4 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 4",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 5 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 5",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 6 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 6",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 7 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 7",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column PERIODO_APERTURA 8 using expression grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "PERIODO_APERTURA 8",
    "expression": "grel:match(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[1]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[0]+\" - \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[3]+\" \"+\nmatch(value, /(\\d{2})\\s([A-Za-z]{3})\\s\\-\\s(\\d{2})\\s([A-Za-z]{3}).*/ )[2]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column oh at index 17 based on column N_BAGNI using expression grel:cells[\"PERIODO_APERTURA 1\"].value+\nif ( isNotNull(cells[\"PERIODO_APERTURA 2\"].value),\", \"+cells[\"PERIODO_APERTURA 2\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 3\"].value),\", \"+cells[\"PERIODO_APERTURA 3\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 4\"].value),\", \"+cells[\"PERIODO_APERTURA 4\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 5\"].value),\", \"+cells[\"PERIODO_APERTURA 5\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 6\"].value),\", \"+cells[\"PERIODO_APERTURA 6\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 7\"].value),\", \"+cells[\"PERIODO_APERTURA 7\"].value,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "oh",
    "columnInsertIndex": 17,
    "baseColumnName": "N_BAGNI",
    "expression": "grel:cells[\"PERIODO_APERTURA 1\"].value+\nif ( isNotNull(cells[\"PERIODO_APERTURA 2\"].value),\", \"+cells[\"PERIODO_APERTURA 2\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 3\"].value),\", \"+cells[\"PERIODO_APERTURA 3\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 4\"].value),\", \"+cells[\"PERIODO_APERTURA 4\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 5\"].value),\", \"+cells[\"PERIODO_APERTURA 5\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 6\"].value),\", \"+cells[\"PERIODO_APERTURA 6\"].value,\"\")+\nif ( isNotNull(cells[\"PERIODO_APERTURA 7\"].value),\", \"+cells[\"PERIODO_APERTURA 7\"].value,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column city at index 3 based on column COMUNE using expression grel:replace(value, \"'\", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "city",
    "columnInsertIndex": 3,
    "baseColumnName": "COMUNE",
    "expression": "grel:replace(value, \"'\", \"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column TELEFONO using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "TELEFONO",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column phone at index 13 based on column TELEFONO using expression grel:value+\";\"+cells[\"CELLULARE\"].value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "phone",
    "columnInsertIndex": 13,
    "baseColumnName": "TELEFONO",
    "expression": "grel:value+\";\"+cells[\"CELLULARE\"].value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column phone using expression grel:chomp(value,\";\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "phone",
    "expression": "grel:chomp(value,\";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column INDIRIZZO using expression grel:replace(value, \"FRAZ.\", \"Frazione\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "INDIRIZZO",
    "expression": "grel:replace(value, \"FRAZ.\", \"Frazione\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column INDIRIZZO using expression grel:replace(value, \"LOC.\", \"Località\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "INDIRIZZO",
    "expression": "grel:replace(value, \"LOC.\", \"Località\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column INDIRIZZO using expression grel:replace(value, \"LOCALITA'\", \"Località\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "INDIRIZZO",
    "expression": "grel:replace(value, \"LOCALITA'\", \"Località\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column INDIRIZZO using expression grel:replace(value, \"'\", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "invert": false,
          "caseSensitive": false,
          "query": "'",
          "name": "INDIRIZZO",
          "type": "text",
          "columnName": "INDIRIZZO"
        }
      ]
    },
    "columnName": "INDIRIZZO",
    "expression": "grel:replace(value, \"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column phone using expression grel:if ( value[0]==\";\",substring(value,1),value)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "phone",
    "expression": "grel:if ( value[0]==\";\",substring(value,1),value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column SITO using expression grel:replace(value, \"http://\", \"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "SITO",
    "expression": "grel:replace(value, \"http://\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]

